## Base
type Query {
    readGithubUser(username: String!): GithubUser
    readUser(id: ID!): User
    listUsers(filter: ModelUserFilterInput, limit: Int, offset: Int): ModelUserConnection
}

type Mutation {
    createUser(input: CreateUserInput!): User
    updateUser(input: UpdateUserInput!): User
    deleteUser(input: DeleteUserInput!): User
}

## Types
type GithubUser {
    id: Int!
    login: String!
}

type User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    createdAt: Date!
    updatedAt: Date!

}

type ModelUserConnection {
    items: [User]
    nextOffset: Int
}

## Query inputs
input ModelUserFilterInput {
    id: ModelIDFilterInput
}

## Mutation inputs
input CreateUserInput {
    firstName: String!
    lastName: String!
    email: String!
}

input UpdateUserInput {
    id: ID!
    firstName: String
    lastName: String
    email: String
}

input DeleteUserInput {
    id: ID
}
