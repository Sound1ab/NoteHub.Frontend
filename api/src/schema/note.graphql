## Base
type Query {
    readNote(id: ID!): Note
    listNotes(filter: ModelNoteFilterInput, limit: Int, nextToken: String): ModelNoteConnection
}

type Mutation {
    createNote(input: CreateNoteInput!): Note
    updateNote(input: UpdateNoteInput!): Note
    deleteNote(input: DeleteNoteInput!): Note
}

## Types
type Note {
    id: ID!
    notebook: Notebook!
    title: String!
    markdown: String!
    excerpt: String!
    createdAt: String!
    updatedAt: String!
}

type ModelNoteConnection {
    items: [Note]
    nextToken: String
}

## Query inputs
input ModelNoteFilterInput {
    id: ModelIDFilterInput
    description: ModelStringFilterInput
    and: [ModelNoteFilterInput]
    or: [ModelNoteFilterInput]
    not: ModelNoteFilterInput
}

## Mutation inputs
input CreateNoteInput {
    notebookId: ID!
    title: String!
    markdown: String!
    excerpt: String!
}

input UpdateNoteInput {
    id: ID!
    title: String
    markdown: String
    excerpt: String
}

input DeleteNoteInput {
    id: ID
}
