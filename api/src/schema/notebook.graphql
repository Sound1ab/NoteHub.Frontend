## Base
type Query {
    readNotebook(id: ID!): Notebook
    listNotebooks(filter: ModelNotebookFilterInput, limit: Int, offset: Int): ModelNotebookConnection
}

type Mutation {
    createNotebook(input: CreateNotebookInput!): Notebook
    updateNotebook(input: UpdateNotebookInput!): Notebook
    deleteNotebook(input: DeleteNotebookInput!): Notebook
}

## Types
type Notebook {
    id: ID!
    user: User!
    title: String!
    notes: [Note]
    createdAt: String!
    updatedAt: String!
}

type ModelNotebookConnection {
    items: [Notebook]
    nextOffset: Int
}

## Query inputs
input ModelNotebookFilterInput {
    id: ModelIDFilterInput
    userId: ModelStringFilterInput
}

## Mutation inputs
input CreateNotebookInput {
    userId: ID!
    title: String!
}

input UpdateNotebookInput {
    id: ID!
    title: String
}

input DeleteNotebookInput {
    id: ID
}
