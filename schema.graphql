# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type File {
  _links: Links!
  content: String
  excerpt: String
  filename: String!
  path: String!
  repo: String!
  sha: String!
}

type GitNode {
  mode: String!
  path: String!
  sha: String!
  size: Int
  type: String!
  url: String!
}

type GithubUser {
  avatar_url: String!
  html_url: String!
  id: Int!
  login: String!
  name: String!
}

type Links {
  html: String!
}

type ModelFileConnection {
  items: [File!]!
}

type ModelNodeConnection {
  nodes: [GitNode!]!
}

type ModelRepoConnection {
  items: [Repo!]!
}

type Mutation {
  createFile(input: CreateFileInput!): File
  createImage(input: CreateFileInput!): File
  createRepo: Repo
  deleteFile(input: DeleteFileInput!): File
  deleteImage(input: DeleteFileInput!): File
  deleteRepo: Repo
  updateFile(input: UpdateFileInput!): File
  updateImage(input: UpdateFileInput!): File
  updateRepo(input: UpdateRepoInput!): Repo
}

type Query {
  listImages: ModelFileConnection!
  login: String!
  logout: String!
  readFile(path: String!): File
  readGithubUser: GithubUser
  readGithubUserAccessToken(code: String!, state: String!): String!
  readImage(path: String!): File
  readNodes: ModelNodeConnection!
  readRepo: Repo
  refresh: String
}

type Repo {
  description: String
  full_name: String!
  id: Int!
  name: String!
  node_id: String!
  private: Boolean!
}

enum CacheControlScope {
  PRIVATE
  PUBLIC
}

input CreateFileInput {
  content: String
  path: String!
}

input DeleteFileInput {
  path: String!
}

input UpdateFileInput {
  content: String
  path: String!
}

input UpdateRepoInput {
  description: String
  private: Boolean
}
