version: 2


jobs:
  # The build job
  build:
    docker:
      - image: circleci/node:8.12-browsers-legacy
    working_directory: ~/sofar-test
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      # Install sofar-test dependencies
      - run:
          name: Install local dependencies
          command: npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
      # Lint the source code
      - run:
          name: Linting
          command: npm run lint
      # Test the source code
      - run:
          name: Testing
          command: npm run test
      # Build sofar-test with different configuration based on
      # the current branch
      - run:
          name: Building
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                npm run build
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build
            fi
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-public-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - public
      - persist_to_workspace:
          root: .
          paths:
            - build

  # The deploy job
  deploy:
    docker:
      - image: circleci/node:8.12-browsers-legacy
    working_directory: ~/sofar-test
    steps:
      - attach_workspace:
          at: .
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: v1-public-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install pip
          command: sudo apt-get install python-dev python-pip
      # Install AWS cli
      - run:
          name: Install aws cli
          command: sudo pip install awscli
      # Set the signature version for the S3 auth
      - run:
          name: Setting Signature Version 4 for S3 Request Authentication
          command: aws configure set default.s3.signature_version s3v4
      # Deploy to the S3 bucket corresponding to the current branch
      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                aws --region us-east-1 s3 sync build s3://sofar-staging/ --delete
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                aws --region us-east-1 s3 sync build s3://sofar-master/ --delete
            fi

workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build
      # The deploy job will only run on the filtered branches and
      # require the build job to be successful before it starts
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - staging
                - master
